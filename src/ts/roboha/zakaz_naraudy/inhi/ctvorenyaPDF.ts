// stvorenyaPDF.ts - –§—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω—ñ—Å—Ç—å –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è PDF –∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞

import html2canvas from "html2canvas";
import { jsPDF } from "jspdf";
import { showNotification } from "./vspluvauhe_povidomlenna";
import {
  globalCache,
  ZAKAZ_NARAYD_BODY_ID,
  ZAKAZ_NARAYD_SAVE_BTN_ID,
  ACT_ITEMS_TABLE_CONTAINER_ID,
} from "../globalCache";
import {
  expandAllNamesInTable,
  restoreOriginalNames,
} from "./kastomna_tabluca";

/**
 * –°—Ö–æ–≤–∞—Ç–∏ –∫–æ–ª–æ–Ω–∫—É –∑–∞ —Ç–µ–∫—Å—Ç–æ–º –∑–∞–≥–æ–ª–æ–≤–∫–∞ (–≤—Ä–∞—Ö–æ–≤—É—î —ñ–Ω–¥–µ–∫—Å–∏ TH)
 */
function collectColumnCellsToHideByHeaderText(
  table: HTMLTableElement,
  headerMatchers: Array<(txt: string) => boolean>,
  bucket: HTMLElement[]
): void {
  const headerCells = Array.from(
    table.querySelectorAll<HTMLElement>("thead th, thead td")
  );

  if (headerCells.length === 0) return;

  let targetColIndexes: number[] = [];

  headerCells.forEach((th, i) => {
    const text = (th.textContent || "").trim().toLowerCase();
    if (headerMatchers.some((fn) => fn(text))) {
      targetColIndexes.push(i + 1); // nth-child ‚Äî 1-based
    }
  });

  if (targetColIndexes.length === 0) return;

  // –ó—ñ–±—Ä–∞—Ç–∏ –≤—Å—ñ –∫–ª—ñ—Ç–∏–Ω–∫–∏ –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –∑–Ω–∞–π–¥–µ–Ω–æ–≥–æ —ñ–Ω–¥–µ–∫—Å—É –∫–æ–ª–æ–Ω–∫–∏
  targetColIndexes.forEach((colIdx) => {
    const selector = `thead tr > *:nth-child(${colIdx}), tbody tr > *:nth-child(${colIdx}), tfoot tr > *:nth-child(${colIdx})`;
    const columnCells = table.querySelectorAll<HTMLElement>(selector);
    columnCells.forEach((cell) => bucket.push(cell));
  });
}

/**
 * –ì–µ–Ω–µ—Ä—É—î PDF-—Ñ–∞–π–ª –∑ –≤–º—ñ—Å—Ç—É –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞.
 * –ü—ñ–¥ —á–∞—Å –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –ø—Ä–∏—Ö–æ–≤—É—î –∫–Ω–æ–ø–∫–∏/–∫–µ—Ä—É—é—á—ñ –µ–ª–µ–º–µ–Ω—Ç–∏, –∞ —Ç–∞–∫–æ–∂ –∫–æ–ª–æ–Ω–∫–∏:
 *  - "–ü–Ü–ë _ –ú–∞–≥–∞–∑–∏–Ω"
 *  - "–ö–∞—Ç–∞–ª–æ–≥"
 * –ê —Ç–∞–∫–æ–∂ —Ä–æ–∑—à–∏—Ä—é—î —Å–∫–æ—Ä–æ—á–µ–Ω—ñ –Ω–∞–π–º–µ–Ω—É–≤–∞–Ω–Ω—è –¥–æ –ø–æ–≤–Ω–∏—Ö.
 * –ü—ñ—Å–ª—è ‚Äî —É—Å–µ –ø–æ–≤–µ—Ä—Ç–∞—î —è–∫ –±—É–ª–æ.
 */
export async function printModalToPdf(): Promise<void> {
  showNotification("–ì–µ–Ω–µ—Ä–∞—Ü—ñ—è PDF...", "info", 2000);

  const modalBody = document.getElementById(ZAKAZ_NARAYD_BODY_ID);
  if (!modalBody) {
    showNotification("–¢—ñ–ª–æ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.", "error");
    return;
  }

  const modalContent = modalBody.closest(
    ".zakaz_narayd-modal-content"
  ) as HTMLElement | null;

  const originalBodyStyle = modalBody.style.cssText;
  const originalModalWidth = modalContent?.style.width || "";
  const originalModalMaxWidth = modalContent?.style.maxWidth || "";

  const elementsToHide: HTMLElement[] = [
    document.getElementById("print-act-button") as HTMLElement,
    document.getElementById("add-row-button") as HTMLElement,
    document.getElementById(ZAKAZ_NARAYD_SAVE_BTN_ID) as HTMLElement,
    document.getElementById("status-lock-btn") as HTMLElement,
    document.getElementById("sklad") as HTMLElement,
    document.querySelector(".modal-close-button") as HTMLElement,
    document.querySelector(".modal-footer") as HTMLElement,
  ].filter(Boolean) as HTMLElement[];

  const table = document.querySelector(
    `#${ACT_ITEMS_TABLE_CONTAINER_ID} table.zakaz_narayd-items-table`
  ) as HTMLTableElement | null;

  if (table) {
    collectColumnCellsToHideByHeaderText(
      table,
      [(t) => t.includes("–ø—ñ–±"), (t) => t.includes("–º–∞–≥–∞–∑–∏–Ω")],
      elementsToHide
    );
    collectColumnCellsToHideByHeaderText(
      table,
      [(t) => t.includes("–∫–∞—Ç–∞–ª–æ–≥")],
      elementsToHide
    );
  }

  // üî∂ 1) –¢–ò–ú–ß–ê–°–û–í–û –°–•–û–í–ê–¢–ò –í–°–Ü –¢–†–ò–ö–£–¢–ù–ò–ö–ò (–∑–Ω—è—Ç–∏ –ø—Ä–∞–ø–æ—Ä—Ü—ñ)
  const warnedQtyCells = Array.from(
    document.querySelectorAll<HTMLElement>('.qty-cell[data-warn="1"]')
  );
  const warnedPriceCells = Array.from(
    document.querySelectorAll<HTMLElement>('.price-cell[data-warnprice="1"]')
  );
  warnedQtyCells.forEach((el) => el.removeAttribute("data-warn"));
  warnedPriceCells.forEach((el) => el.removeAttribute("data-warnprice"));

  // üî∂ 2) –†–û–ó–®–ò–†–ò–¢–ò –í–°–Ü –°–ö–û–†–û–ß–ï–ù–Ü –ù–ê–ô–ú–ï–ù–£–í–ê–ù–ù–Ø –î–û –ü–û–í–ù–ò–•
  const originalNames = expandAllNamesInTable();

  // –¢–∞–∫–æ–∂ —Å—Ö–æ–≤–∞—î–º–æ –∫–µ—Ä—É—é—á—ñ –µ–ª–µ–º–µ–Ω—Ç–∏
  const originalDisplays = new Map<HTMLElement, string>();
  elementsToHide.forEach((el) => {
    originalDisplays.set(el, el.style.display);
    el.style.display = "none";
  });

  if (modalContent) {
    modalContent.style.width = "1000px";
    modalContent.style.maxWidth = "1000px";
  }

  modalBody.style.overflow = "visible";
  modalBody.style.height = "auto";
  modalBody.style.maxHeight = "none";

  try {
    const canvas = await html2canvas(modalBody, { scale: 2, useCORS: true });
    const imgData = canvas.toDataURL("image/jpeg", 0.9);
    const pdf = new jsPDF("p", "mm", "a4");
    const pageWidth = pdf.internal.pageSize.getWidth();
    const pageHeight = pdf.internal.pageSize.getHeight();

    // –í—ñ–¥—Å—Ç—É–ø–∏: –∑–≤–µ—Ä—Ö—É 1—Å–º (10–º–º), –ø–æ –±–æ–∫–∞–º 1—Å–º (10–º–º), –∑–Ω–∏–∑—É 1—Å–º (10–º–º)
    const marginTop = 10; // 1 —Å–º
    const marginLeft = 10; // 1 —Å–º
    const marginRight = 10; // 1 —Å–º
    const marginBottom = 20; // 2 —Å–º

    const contentWidth = pageWidth - marginLeft - marginRight;
    const contentHeight = pageHeight - marginTop - marginBottom;

    // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω—ñ —Ä–æ–∑–º—ñ—Ä–∏ –±–µ–∑ –º–∞—Å—à—Ç–∞–±—É–≤–∞–Ω–Ω—è
    const imgWidth = contentWidth;
    const imgHeight = (canvas.height * imgWidth) / canvas.width;

    // –Ø–∫—â–æ –∫–æ–Ω—Ç–µ–Ω—Ç –ø–æ–º—ñ—â–∞—î—Ç—å—Å—è –Ω–∞ –æ–¥–Ω—É —Å—Ç–æ—Ä—ñ–Ω–∫—É
    if (imgHeight <= contentHeight) {
      pdf.addImage(imgData, "JPEG", marginLeft, marginTop, imgWidth, imgHeight);
    } else {
      // –†–æ–∑–±–∏–≤–∞—î–º–æ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
      let currentY = 0;
      let pageNumber = 0;

      while (currentY < imgHeight) {
        if (pageNumber > 0) {
          pdf.addPage();
        }

        // –í–∏—Å–æ—Ç–∞ —á–∞—Å—Ç–∏–Ω–∏ –¥–ª—è –ø–æ—Ç–æ—á–Ω–æ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏
        const remainingHeight = imgHeight - currentY;
        const pageImgHeight = Math.min(contentHeight, remainingHeight);

        // –†–æ–∑—Ä–∞—Ö–æ–≤—É—î–º–æ —è–∫—É —á–∞—Å—Ç–∏–Ω—É –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–æ–≥–æ canvas –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤–∑—è—Ç–∏
        const sourceHeight = (pageImgHeight * canvas.height) / imgHeight;
        const sourceY = (currentY * canvas.height) / imgHeight;

        // –°—Ç–≤–æ—Ä—é—î–º–æ canvas –¥–ª—è —á–∞—Å—Ç–∏–Ω–∏ –∫–æ–Ω—Ç–µ–Ω—Ç—É
        const tempCanvas = document.createElement("canvas");
        tempCanvas.width = canvas.width;
        tempCanvas.height = sourceHeight;
        const tempCtx = tempCanvas.getContext("2d");

        if (tempCtx) {
          tempCtx.drawImage(
            canvas,
            0,
            sourceY, // –î–∂–µ—Ä–µ–ª–æ x, y
            canvas.width,
            sourceHeight, // –î–∂–µ—Ä–µ–ª–æ width, height
            0,
            0, // –ü—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è x, y
            canvas.width,
            sourceHeight // –ü—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è width, height
          );

          const pageImgData = tempCanvas.toDataURL("image/jpeg", 0.9);
          pdf.addImage(
            pageImgData,
            "JPEG",
            marginLeft,
            marginTop,
            imgWidth,
            pageImgHeight
          );
        }

        currentY += pageImgHeight;
        pageNumber++;
      }
    }

    const actNumber = globalCache.currentActId;
    pdf.save(`–ê–∫—Ç ‚Ññ${actNumber}.pdf`);
    showNotification("PDF —É—Å–ø—ñ—à–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–æ!", "success", 2000);
  } catch (error) {
    console.error("üí• –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó PDF:", error);
    showNotification("–ü–æ–º–∏–ª–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó PDF", "error");
  } finally {
    // üîÑ 3) –ü–û–í–ï–†–ù–£–¢–ò –í–°–Ü –ù–ê–ô–ú–ï–ù–£–í–ê–ù–ù–Ø –î–û –°–ö–û–†–û–ß–ï–ù–û–ì–û –í–ò–ì–õ–Ø–î–£
    restoreOriginalNames(originalNames);

    // üîÑ 4) –ü–û–í–ï–†–ù–£–¢–ò –¢–†–ò–ö–£–¢–ù–ò–ö–ò –ù–ê–ó–ê–î
    warnedQtyCells.forEach((el) => el.setAttribute("data-warn", "1"));
    warnedPriceCells.forEach((el) => el.setAttribute("data-warnprice", "1"));

    // –ü–æ–≤–µ—Ä–Ω—É—Ç–∏ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ —Ç–∞ —Å—Ç–∏–ª—ñ
    originalDisplays.forEach((disp, el) => {
      el.style.display = disp;
    });
    modalBody.style.cssText = originalBodyStyle;
    if (modalContent) {
      modalContent.style.width = originalModalWidth;
      modalContent.style.maxWidth = originalModalMaxWidth;
    }
  }
}
